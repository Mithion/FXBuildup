buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.parchmentmc:librarian:1.+'
    }
}
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = '0.61'
group = 'com.mithion.fxbuildup' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'fxbuildup'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {    
    mappings channel: 'parchment', version: '1.19.2-2022.08.14-1.19.3'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'			
			
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'fxbuildup'

            mods {
                fxbuildup {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
			
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'fxbuildup'			

            mods {
                fxbuildup {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
			
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'fxbuildup'

            mods {
                fxbuildup {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
			
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'fxbuildup', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                fxbuildup {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    // flatDir {
    //     dir 'libs'
    // }
}

dependencies {    
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.23'
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "Effects Buildup",
                "Specification-Vendor"    : "Mithion",
                "Specification-Version"   : "0.6", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "0.6",
                "Implementation-Vendor"   : "Mithion",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
